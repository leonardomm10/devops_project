name: "Destroy EKS Cluster"

on:
  workflow_dispatch: 

jobs:
  terraform:
    name: "Destroy EKS Cluster"
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -backend-config="bucket=${{ vars.RDS_USERNAME }}" -backend-config="key=devops_project.tfstate"

      - name: Capture Terraform Outputs
        id: capture_outputs
        working-directory: ./terraform
        run: |
          echo "cluster_name=$(terraform output -raw cluster_name)" >> $GITHUB_ENV
          echo "efs_file_system_id=$(terraform output -raw efs_file_system_id)" >> $GITHUB_ENV

      - name: Delete Cluster Configuration
        working-directory: ./
        env:
          CLUSTER_NAME: ${{ env.cluster_name }}
          EFS_FILE_SYSTEM_ID: ${{ env.efs_file_system_id }}
        run: |
          aws eks update-kubeconfig --name $CLUSTER_NAME
          sed -i s/file_system_id/$EFS_FILE_SYSTEM_ID/g k8s/storageclass.yaml
          sed -i s/clusterissuer_email/${{ vars.CLUSTERISSUER_EMAIL }}/g k8s/clusterissuer.yaml
          kubectl delete -f k8s/

      - name: Terraform destroy
        working-directory: ./terraform
        run: terraform destroy -var "aws_rds_username=${{ vars.RDS_USERNAME }}" -var "aws_rds_password=${{ secrets.RDS_PASSWORD }}" --auto-approve